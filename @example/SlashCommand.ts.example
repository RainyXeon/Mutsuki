import { CommandInteraction, EmbedBuilder, ApplicationCommandOptionType } from "discord.js";
import { Accessableby, SlashCommand } from "../../../@types/Command.js";
import { Manager } from "../../../manager.js";

export default class implements SlashCommand {
  name = ["example", "command"] // Max is 3;
  description = "Example command";
  accessableby = Accessableby.Member;
  category = "Info";
  options = [
    {
      name: "example_args",
      description: "Example",
      required: true,
      type: ApplicationCommandOptionType.String,
    },
    {
      name: "example_args",
      description: "Example",
      type: ApplicationCommandOptionType.String,
    },
    {
      name: "example_args",
      description: "Example",
      required: true,
      type: ApplicationCommandOptionType.String,
      autocomplete: true,
    },
    {
      name: "example_args",
      description: "Type",
      type: ApplicationCommandOptionType.String,
      required: true,
      choices: [
        {
          name: "Create",
          value: "create",
        },
        {
          name: "Delete",
          value: "delete",
        },
      ],
    }
  ]

  async run(
    interaction: CommandInteraction,
    client: Manager
  ) {

    //your command code here
    // Examples:
    /*
    await interaction.deferReply({ ephemeral: false });

    const embed = new EmbedBuilder()
      .setAuthor({
        name: client.user!.tag + " Status",
        iconURL: String(client.user!.displayAvatarURL({ size: 2048 })),
      })
      .setColor(client.color)
      .setDescription(`Ping: ${client.ws.ping}`)
      .setTimestamp();
    return interaction.editReply({ embeds: [embed] });
    */
  }
}
